version: '3'

networks:
  substrate-net:
    driver: bridge
  evm-net:
    driver: bridge

services:
  postgres:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - substrate-net
      - evm-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node-hyperbridge-gargantua:
    image: subquerynetwork/subql-node-substrate:latest
    networks:
      - substrate-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/hyperbridge-gargantua.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-5}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --source-chain=hyperbridge-gargantua
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-hyperbridge-gargantua:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-bifrost-paseo:
    image: subquerynetwork/subql-node-substrate:latest
    networks:
      - substrate-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/bifrost-paseo.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-5}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --source-chain=bifrost-paseo
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-bifrost-paseo:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-ethereum-sepolia:
    image: subquerynetwork/subql-node-ethereum:v3.11.0
    networks:
      - evm-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/ethereum-sepolia.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-3}
      - --multi-chain
      - --unsafe
      - --log-level=info
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-ethereum-sepolia:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-base-sepolia:
    image: subquerynetwork/subql-node-ethereum:v3.11.0
    networks:
      - evm-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/base-sepolia.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-3}
      - --multi-chain
      - --unsafe
      - --log-level=info
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-base-sepolia:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-optimism-sepolia:
    image: subquerynetwork/subql-node-ethereum:v3.11.0
    networks:
      - evm-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/optimism-sepolia.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-3}
      - --multi-chain
      - --unsafe
      - --log-level=info
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-optimism-sepolia:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-arbitrum-sepolia:
    image: subquerynetwork/subql-node-ethereum:v3.11.0
    networks:
      - evm-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/arbitrum-sepolia.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-3}
      - --multi-chain
      - --unsafe
      - --log-level=info
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-arbitrum-sepolia:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-bsc-chapel:
    image: subquerynetwork/subql-node-ethereum:v3.11.0
    networks:
      - evm-net
    depends_on:
      'postgres':
        condition: service_healthy
    restart: unless-stopped
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/bsc-chapel.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-1}
      - --batch-size=${SUBQL_BATCH_SIZE:-3}
      - --multi-chain
      - --unsafe
      - --log-level=info
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-bsc-chapel:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: subquerynetwork/subql-query:v2.9.0
    networks:
      - substrate-net
      - evm-net
    ports:
      - 3000:3000
    depends_on:
      'postgres':
        condition: service_healthy
      'subquery-node-hyperbridge-gargantua':
        condition: service_healthy
      'subquery-node-bifrost-paseo':
        condition: service_healthy
      'subquery-node-ethereum-sepolia':
        condition: service_healthy
      'subquery-node-base-sepolia':
        condition: service_healthy
      'subquery-node-optimism-sepolia':
        condition: service_healthy
      'subquery-node-arbitrum-sepolia':
        condition: service_healthy
      'subquery-node-bsc-chapel':
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --name=app
      - --playground

volumes:
  postgres_data: