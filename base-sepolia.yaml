# // Auto-generated , DO NOT EDIT
specVersion: 1.0.0
version: 0.0.1
name: base-sepolia
description: Base Sepolia Chain Indexer
runner:
  node:
    name: '@subql/node-ethereum'
    version: '>=3.0.0'
  query:
    name: '@subql/query'
    version: '*'
schema:
  file: ./schema.graphql
network:
  chainId: '84532'
  endpoint:
    - 'https://base-sepolia.blockpi.network/v1/rpc/public'
    - 'https://base-sepolia-rpc.publicnode.com'
dataSources:
  - kind: ethereum/Runtime
    startBlock: 13464107
    options:
      abi: ethereumHost
      address: '0xe7C43500e07E0Bb5fC0987db95fE57Ce29B9bb80'
    assets:
      ethereumHost:
        file: ./abis/EthereumHost.abi.json
      chainLinkAggregatorV3:
        file: ./abis/ChainLinkAggregatorV3.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handlePostRequestEvent
          filter:
            topics:
              - 'PostRequestEvent(string,string,address,bytes,uint256,uint256,bytes,uint256)'
        - kind: ethereum/LogHandler
          handler: handlePostResponseEvent
          filter:
            topics:
              - 'PostResponseEvent(string,string,address,bytes,uint256,uint256,bytes,bytes,uint256,uint256)'
        - kind: ethereum/LogHandler
          handler: handlePostRequestHandledEvent
          filter:
            topics:
              - 'PostRequestHandled(bytes32,address)'
        - kind: ethereum/LogHandler
          handler: handlePostResponseHandledEvent
          filter:
            topics:
              - 'PostResponseHandled(bytes32,address)'
        - kind: ethereum/LogHandler
          handler: handlePostRequestTimeoutHandledEvent
          filter:
            topics:
              - 'PostRequestTimeoutHandled(bytes32,string)'
        - kind: ethereum/LogHandler
          handler: handlePostResponseTimeoutHandledEvent
          filter:
            topics:
              - 'PostResponseTimeoutHandled(bytes32,string)'
        - kind: ethereum/LogHandler
          handler: handleGetRequestHandledEvent
          filter:
            topics:
              - 'GetRequestHandled(bytes32,address)'
        - kind: ethereum/LogHandler
          handler: handleGetRequestTimeoutHandledEvent
          filter:
            topics:
              - 'GetRequestTimeoutHandled(bytes32,string)'
        - kind: ethereum/LogHandler
          handler: handleStateMachineUpdatedEvent
          filter:
            topics:
              - 'StateMachineUpdated(string,uint256)'
  - kind: ethereum/Runtime
    startBlock: 13464107
    options:
      abi: erc6160ext20
      address: '0x83aF3a8a53bf0E379c17A8611AD697401A5970fD'
    assets:
      erc6160ext20:
        file: ./abis/ERC6160Ext20.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handleTransferEvent
          filter:
            topics:
              - >-
                Transfer(address indexed from, address indexed to, uint256
                amount)
  - kind: ethereum/Runtime
    startBlock: 13464107
    options:
      abi: handlerV1
      address: '0x0FAC5FfFa3C7F0C22CF0aa644ae68eEF8Db2456E'
    assets:
      handlerV1:
        file: ./abis/HandlerV1.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handlePostRequestTransactionHandler
          kind: ethereum/TransactionHandler
          function: >-
              handlePostRequests(address,(((uint256,uint256),bytes32[],uint256),((bytes,bytes,uint64,bytes,bytes,uint64,bytes),uint256,uint256)[]))
        - handler: handlePostResponseTransactionHandler
          kind: ethereum/TransactionHandler
          function: >-
              handlePostResponses(address,(((uint256,uint256),bytes32[],uint256),(((bytes,bytes,uint64,bytes,bytes,uint64,bytes),bytes,uint64),uint256,uint256)[]))
  - kind: ethereum/Runtime
    startBlock: 13464107
    options:
      abi: tokenGateway
      address: '0x41867Dd678E3055649c04Fa10180ba90229cAd9F'
    assets:
      tokenGateway:
        file: ./abis/TokenGateway.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handleBidPlacedEvent
          filter:
            topics:
              - 'BidPlaced(bytes32,uint256,bytes32,address)'
        - kind: ethereum/LogHandler
          handler: handleBidRefundedEvent
          filter:
            topics:
              - 'BidRefunded(bytes32,bytes32,address)'
        - kind: ethereum/LogHandler
          handler: handleRequestFulfilledEvent
          filter:
            topics:
              - 'RequestFulfilled(uint256,address,bytes32)'
        - kind: ethereum/LogHandler
          handler: handleAssetReceivedEvent
          filter:
            topics:
              - 'AssetReceived(uint256,bytes32,bytes32,address,bytes32)'
        - kind: ethereum/LogHandler
          handler: handleAssetTeleportedEvent
          filter:
            topics:
              - 'AssetTeleported(bytes32,string,uint256,bytes32,address,bytes32,bool)'
repository: 'https://github.com/polytope-labs/hyperbridge'
